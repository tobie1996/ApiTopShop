openapi: 3.0.0
info:
  title: Fashion Dashboard API
  version: 1.0.0
  description: API pour gérer les produits de mode
servers:
  - url: http://localhost:5001
    description: Serveur de développement
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - images
        - category
        - title
        - price
        - description
      properties:
        id:
          type: integer
          description: ID unique du produit
        images:
          type: array
          items:
            type: string
          description: URLs des images du produit
        category:
          type: string
          enum: [Robes, Hauts, Pantalons, Jupes, Pulls, Manteaux, Combinaisons, T-shirts, Cardigans, Chemisiers]
          description: Catégorie du produit
        title:
          type: string
          description: Nom du produit
        price:
          type: number
          description: Prix du produit
        description:
          type: string
          description: Description du produit
      example:
        id: 1
        images: ["https://example.com/image1.jpg", "https://example.com/image2.jpg"]
        category: "Robes"
        title: "Robe d'été fleurie"
        price: 79.99
        description: "Découvrez la Robe d'Été Fleurie, parfaite pour les journées ensoleillées."
tags:
  - name: Products
    description: Gestion des produits
  - name: Categories
    description: Gestion des catégories
  - name: Services
    description: Gestion des services
paths:
  /api/products:
    get:
      summary: Récupère tous les produits
      tags: [Products]
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filtrer par catégorie
      responses:
        200:
          description: Liste des produits
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
      security:
        - basicAuth: []
    post:
      summary: Crée un nouveau produit
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                category:
                  type: string
                  enum: [Robes, Hauts, Pantalons, Jupes, Pulls, Manteaux, Combinaisons, T-shirts, Cardigans, Chemisiers]
                title:
                  type: string
                price:
                  type: number
                description:
                  type: string
              required:
                - images
                - category
                - title
                - price
                - description
      responses:
        201:
          description: Produit créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: Données invalides
      security:
        - basicAuth: []

  /api/categories:
    get:
      summary: Récupère toutes les catégories
      tags: [Categories]
      responses:
        200:
          description: Liste des catégories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
      security:
        - basicAuth: []
    post:
      summary: Crée une nouvelle catégorie
      tags: [Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
                - title
      responses:
        201:
          description: Catégorie créée avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          description: Données invalides
      security:
        - basicAuth: []

  /api/categories/{id}:
    get:
      summary: Récupère une catégorie par son ID
      tags: [Categories]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la catégorie
      responses:
        200:
          description: Détails de la catégorie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        404:
          description: Catégorie non trouvée
      security:
        - basicAuth: []
    put:
      summary: Met à jour une catégorie
      tags: [Categories]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la catégorie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        200:
          description: Catégorie mise à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        404:
          description: Catégorie non trouvée
      security:
        - basicAuth: []
    delete:
      summary: Supprime une catégorie
      tags: [Categories]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID de la catégorie
      responses:
        200:
          description: Catégorie supprimée avec succès
        404:
          description: Catégorie non trouvée
      security:
        - basicAuth: []

  /api/services:
    get:
      summary: Récupère tous les services
      tags: [Services]
      responses:
        200:
          description: Liste des services
          content:
            application/json:
              schema:
                type: object
                properties:
                  services:
                    type: array
                    items:
                      $ref: '#/components/schemas/Service'
      security:
        - basicAuth: []
    post:
      summary: Crée un nouveau service
      tags: [Services]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                  description: URLs des images du service
                title:
                  type: string
                price:
                  type: number
                description:
                  type: string
              required:
                - images
                - title
                - price
                - description
      responses:
        201:
          description: Service créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        400:
          description: Données invalides
      security:
        - basicAuth: []

  /api/services/{id}:
    get:
      summary: Récupère un service par son ID
      tags: [Services]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du service
      responses:
        200:
          description: Détails du service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        404:
          description: Service non trouvé
      security:
        - basicAuth: []
    put:
      summary: Met à jour un service
      tags: [Services]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                  description: URLs des images du service
                title:
                  type: string
                price:
                  type: number
                description:
                  type: string
              required:
                - images
                - title
                - price
                - description
      responses:
        200:
          description: Service mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        404:
          description: Service non trouvé
      security:
        - basicAuth: []
    delete:
      summary: Supprime un service
      tags: [Services]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du service
      responses:
        200:
          description: Service supprimé avec succès
        404:
          description: Service non trouvé
      security:
        - basicAuth: []
  /api/products/{id}:
    delete:
      summary: Supprime un produit par son ID
      tags: [Products]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du produit à supprimer
      responses:
        200:
          description: Produit supprimé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  product:
                    $ref: '#/components/schemas/Product'
        404:
          description: Produit non trouvé
        500:
          description: Erreur serveur
      security:
        - basicAuth: []
    get:
      summary: Récupère un produit par son ID
      tags: [Products]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du produit
      responses:
        200:
          description: Détails du produit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Produit non trouvé
      security:
        - basicAuth: []
    put:
      summary: Met à jour un produit
      tags: [Products]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID du produit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                category:
                  type: string
                  enum: [Robes, Hauts, Pantalons, Jupes, Pulls, Manteaux, Combinaisons, T-shirts, Cardigans, Chemisiers]
                title:
                  type: string
                price:
                  type: number
                description:
                  type: string
              required:
                - images
                - category
                - title
                - price
                - description
      responses:
        200:
          description: Produit mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Produit non trouvé
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                title:
                  type: string
                price:
                  type: number
                description:
                  type: string
              required:
                - images
                - title
                - price
                - description
      responses:
        200:
          description: Liste des catégories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: string
                title:
                  type: string
                price:
                  type: number
                description:
                  type: string
              required:
                - images
                - title
                - price
                - description
                    type: object
